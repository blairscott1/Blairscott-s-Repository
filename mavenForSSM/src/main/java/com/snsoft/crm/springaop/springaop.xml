<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop ">
<!-- 准备工作,导入aop(约束)命名空间 -->
	<!-- 1.配置目标对象 -->
	<bean name="userService" class="com.snsoft.crm.service.impl.UserServiceImpl"></bean>
	<!-- 2.配置通知对象 -->
	<bean name="advice" class="com.snsoft.crm.springaop.Advice"></bean>
	<!-- 3.配置将通知对象织入目标对象中 -->
	<aop:config>
		<!-- 配置切入点  
		演变:
			public void com.snsoft.crm.service.impl.UserServiceImpl.add()
			void com.snsoft.crm.service.impl.UserServiceImpl.add()	:public可以不写
			* com.snsoft.crm.service.impl.UserServiceImpl.add()		:任意返回类型用*
			* com.snsoft.crm.service.impl.UserServiceImpl.add(..)	:(..)表示任意形参
			* com.snsoft.crm.service.impl.UserServiceImpl.*(..)		:任意方法用*表示
			* com.snsoft.crm.service.impl.*ServiceImpl.*(..)		:任何serviceImpl
			* com.snsoft.crm.service.impl..*.*(..)			:service及其子包的所有方法
		-->
		<aop:pointcut expression="execution:* com.snsoft.crm.service.impl.*ServiceImpl.*(..)" id="pc"/>
		<aop:aspect ref="advice">
			<!-- 指定名为before的方法作为前置通知 -->
			<aop:before method="before" pointcut-ref="pc" />
			<aop:after method="afterReturning" pointcut-ref="pc" />
			<aop:around method="around" pointcut-ref="pc" />
		</aop:aspect>
	</aop:config>
</beans>